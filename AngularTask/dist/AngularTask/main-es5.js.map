{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/models/Pagination.ts","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/new-preview-details/new-preview-details.component.ts","webpack:///src/app/new-preview-details/new-preview-details.component.html","webpack:///src/app/news-detail/news-detail.component.ts","webpack:///src/app/news-detail/news-detail.component.html","webpack:///src/app/news-list/news-list.component.ts","webpack:///src/app/news-list/news-list.component.html","webpack:///src/app/news/news.component.ts","webpack:///src/app/news/news.component.html","webpack:///src/app/routes.ts","webpack:///src/app/services/alertify.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/category.service.ts","webpack:///src/app/services/error.interceptor.ts","webpack:///src/app/services/news.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","authService","jwtHelper","token","localStorage","getItem","decodedToken","decodeToken","selector","templateUrl","styleUrls","tokenGetter","AppModule","config","allowedDomains","disallowedRoutes","declarations","providers","bootstrap","AuthGuard","router","alertify","loggedIn","error","navigate","providedIn","HomeComponent","newsService","searchQuery","pagination","currentPage","itemsPerPage","loadNews","loadNewsByName","subscribe","res","listOfNews","result","event","page","searchNews","pageChanged","PaginatedResult","NavComponent","model","login","success","err","removeItem","message","NewPreviewDetailsComponent","route","snapshot","params","loadNewsDetails","getById","imageUrl","Date","getTime","NewsDetailComponent","categoryService","isFileSelected","resetForm","getCategories","form","selectedValue","newsData","CategoryId","Id","insertRecord","updateRecord","postNews","files","File","item","putNews","Name","Description","getAll","toPromise","listofCategories","SubmitNews","handleFileInput","NewsListComponent","data","confirm","deleteNews","warning","NewsComponent","appRoutes","path","component","runGuardsAndResolvers","canActivate","children","redirectTo","pathMatch","AlertifyService","okCallBack","AuthService","http","post","pipe","response","user","setItem","isTokenExpired","CategoryService","get","ErrorInterceptor","next","handle","status","statusText","applicationError","headers","serverError","modalStateErrors","errors","key","ErrorInterceptorProvider","provide","useClass","multi","NewsService","getFormData","put","paginatedResult","append","observe","body","JSON","parse","news","formData","FormData","name","toString","environment","production","baseUrl","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: []\n})\nexport class AppComponent implements OnInit{\njwtHelper = new JwtHelperService();\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit(){\n    const token = localStorage.getItem('token');\n    if (token){\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n  }\n}\n","<app-nav></app-nav>\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {  FormsModule} from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorInterceptorProvider } from './services/error.interceptor';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { RouterModule } from '@angular/router';\nimport { appRoutes } from './routes';\nimport { NewsDetailComponent } from './news-detail/news-detail.component';\nimport { NewsListComponent } from './news-list/news-list.component';\nimport { NewsComponent } from './news/news.component';\nimport { NewPreviewDetailsComponent } from './new-preview-details/new-preview-details.component';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\n\nexport function tokenGetter(){\n   return localStorage.getItem('token');\n}\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      HomeComponent,\n      NewsDetailComponent,\n      NewsListComponent,\n      NewsComponent,\n      NewPreviewDetailsComponent\n   ],\n   imports: [\n      BrowserModule,\n      AppRoutingModule,\n      FormsModule,\n      HttpClientModule,\n      ToastrModule.forRoot(),\n      BrowserAnimationsModule,\n      BsDropdownModule.forRoot(),\n      RouterModule.forRoot(appRoutes),\n      JwtModule.forRoot({\n         config: {\n            tokenGetter: tokenGetter,\n            allowedDomains: ['localhost:61364'],\n            disallowedRoutes: ['http://localhost:61364/api/auth']\n         }\n      }),\n      PaginationModule.forRoot()\n   ],\n   providers: [\n      AuthService,\n      ErrorInterceptorProvider\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router, private alertify: AlertifyService){ }\n  canActivate(): boolean {\n    if (this.authService.loggedIn()){\n      return true;\n    }\n    this.alertify.error('You shall not pass!!');\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NewsService } from '../services/news.service';\nimport { Pagination, PaginatedResult } from '../models/Pagination';\nimport { News } from '../models/news';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  searchQuery = '';\n  pagination: Pagination;\n  listOfNews: News[];\n\n  constructor(public newsService: NewsService) { }\n\n  ngOnInit() {\n    this.pagination = {\n      currentPage: 1,\n      itemsPerPage: 3\n      } as Pagination;\n    this.loadNews();\n  }\n  loadNews(){\n    this.newsService.loadNewsByName(this.searchQuery, this.pagination.currentPage, this.pagination.itemsPerPage)\n    .subscribe((res: PaginatedResult<News[]>) => {\n      this.listOfNews = res.result;\n      this.pagination = res.pagination;\n    });\n  }\n  searchNews(){\n    this.newsService.loadNewsByName(this.searchQuery, this.pagination.currentPage, this.pagination.itemsPerPage)\n    .subscribe((res: PaginatedResult<News[]>) => {\n      this.listOfNews = res.result;\n      this.pagination = res.pagination;\n    });\n  }\n    pageChanged(event: any): void {\n      this.pagination.currentPage = event.page;\n      this.loadNews();\n    }\n}\n","<div class=\"home-news-listing\">\n  <div class=\"search-news-form\">\n    <form\n      (ngSubmit)=\"searchNews()\"\n      #searchForm=\"ngForm\"\n      class=\"form-inline my-2 my-lg-0\"\n    >\n      <input\n        class=\"form-control col-md-5 mr-sm-2\"\n        type=\"text\"\n        name=\"searchQuery\"\n        [(ngModel)]=\"searchQuery\"\n        placeholder=\"Search\"\n      />\n      <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">\n        <i class=\"fas fa-search\"></i> Search\n      </button>\n    </form>\n  </div>\n  <table class=\"table table-hover\">\n    <tr *ngFor=\"let item of listOfNews\">\n      <td>{{ item.Name }}</td>\n      <td>{{ item.Category }}</td>\n      <td>{{ item.Description }}</td>\n      <td\n        [routerLink]=\"['/news-view', item.Id]\"\n        routerLinkActive=\"router-link-active\"\n      >\n        View post\n      </td>\n    </tr>\n  </table>\n\n  <div class=\"d-flex justify-content-center\">\n    <pagination\n      [boundaryLinks]=\"true\"\n      [totalItems]=\"pagination.totalItems\"\n      [itemsPerPage]=\"pagination.itemsPerPage\"\n      [(ngModel)]=\"pagination.currentPage\"\n      (pageChanged)=\"pageChanged($event)\"\n      previousText=\"&lsaquo;\"\n      nextText=\"&rsaquo;\"\n      firstText=\"&laquo;\"\n      lastText=\"&raquo;\"\n    >\n    </pagination>\n  </div>\n</div>\n","export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginatedResult<T>{\n    result: T;\n    pagination: Pagination;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css'],\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n\n  constructor(\n    public  authService: AuthService,\n    private alertify: AlertifyService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {}\n\n  login() {\n    this.authService.login(this.model).subscribe(\n      (res) => {\n        this.alertify.success('Logged in successfully.');\n      },\n      (err) => {\n        this.alertify.error(err);\n      },\n      () => {\n        this.router.navigate(['/news']);\n      }\n    );\n  }\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n  logOut() {\n    localStorage.removeItem('token');\n    this.alertify.message('Logged out');\n    this.router.navigate(['/home']);\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/home']\" >News portal</a>\n\n    <ul *ngIf=\"loggedIn()\" class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['/news']\">Add/Edit</a>\n      </li>\n    </ul>\n\n    <div *ngIf=\"loggedIn()\" class=\"dropdown\" dropdown>\n      <a class=\"dropdown-toggle text-light\" dropdownToggle>\n        Welcome {{ authService.decodedToken?.unique_name | titlecase }}\n      </a>\n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n        <a class=\"dropdown-item\" href=\"#\" (click)=\"logOut()\"\n          ><i class=\"fa fa-sign-out\"></i>Logout</a\n        >\n      </div>\n    </div>\n\n    <form\n      *ngIf=\"!loggedIn()\"\n      #loginForm=\"ngForm\"\n      class=\"form-inline my-2 my-lg-0\"\n      (ngSubmit)=\"login()\"\n    >\n      <input\n        class=\"form-control mr-sm-2\"\n        type=\"text\"\n        name=\"username\"\n        placeholder=\"Username\"\n        required\n        [(ngModel)]=\"model.username\"\n      />\n      <input\n        class=\"form-control mr-sm-2\"\n        type=\"password\"\n        placeholder=\"Password\"\n        required\n        name=\"password\"\n        [(ngModel)]=\"model.password\"\n      />\n      <button\n        [disabled]=\"loginForm.invalid\"\n        class=\"btn btn-success my-2 my-sm-0\"\n        type=\"submit\"\n      >\n        Login\n      </button>\n    </form>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NewsService } from '../services/news.service';\nimport { News } from '../models/news';\nimport { baseUrl } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-new-preview-details',\n  templateUrl: './new-preview-details.component.html',\n  styleUrls: ['./new-preview-details.component.css'],\n})\nexport class NewPreviewDetailsComponent implements OnInit {\n  id: number;\n  model: News = {} as News;\n  constructor(private route: ActivatedRoute, public newsService: NewsService) {\n    this.id = this.route.snapshot.params['id'];\n  }\n\n  ngOnInit() {\n    this.loadNewsDetails();\n  }\n\n  loadNewsDetails() {\n    return this.newsService.getById(this.id).subscribe((res: News) => {\n      this.model = res;\n      this.newsService.imageUrl =\n        baseUrl + 'download/' + this.id + '?' + new Date().getTime();\n    });\n  }\n}\n","<hr class=\"featurette-divider\" />\n<div class=\"row featurette\">\n  <div class=\"col-md-7 order-md-2\">\n    <h2 class=\"featurette-heading\">{{ model.Name }}</h2>\n    <p class=\"lead\">{{ model.Description }}</p>\n  </div>\n  <div class=\"col-md-5 order-md-1\">\n    <img\n      class=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\"\n      *ngIf=\"newsService.imageUrl\"\n      [src]=\"newsService.imageUrl\"\n      alt=\"News image\"\n    />\n  </div>\n</div>\n<hr class=\"featurette-divider\" />\n","import { Component, OnInit } from '@angular/core';\nimport { NewsService } from '../services/news.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { CategoryService } from '../services/category.service';\nimport { Category } from '../models/category';\n\n@Component({\n  selector: 'app-news-detail',\n  templateUrl: './news-detail.component.html',\n  styleUrls: ['./news-detail.component.css'],\n})\nexport class NewsDetailComponent implements OnInit {\n  listofCategories: any[];\n  selectedValue: any;\n  imageUrl = '';\n  isFileSelected = false;\n  constructor(\n    public newsService: NewsService,\n    private categoryService: CategoryService,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.resetForm();\n    this.getCategories();\n  }\n  SubmitNews(form: NgForm) {\n    if (!this.isFileSelected){\n      this.alertify.error('Please select a file.');\n      return;\n    }\n    if (this.selectedValue) {\n      this.newsService.newsData.CategoryId = +this.selectedValue;\n    }\n    if (this.newsService.newsData.Id === 0) {\n      this.insertRecord(form);\n    } else {\n      this.updateRecord(form);\n    }\n    \n    this.isFileSelected = false;\n  }\n\n  insertRecord(form: NgForm) {\n    this.newsService.postNews().subscribe(\n      (res) => {\n        this.resetForm(form);\n        this.alertify.success('Submitted successfully');\n        this.newsService.loadNewsByName('');\n      },\n      (err) => {\n        this.alertify.error(err);\n      }\n    );\n  }\n\n  handleFileInput(files: FileList) {\n    this.isFileSelected = true;\n    this.newsService.newsData.File = files.item(0);\n  }\n\n  updateRecord(form: NgForm) {\n    this.newsService.putNews().subscribe(\n      (res) => {\n        this.resetForm(form);\n        this.alertify.success('Submitted successfully');\n      },\n      (err) => {\n        this.alertify.error(err);\n      }\n    );\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.resetForm();\n    }\n    this.newsService.newsData = {\n      Id: 0,\n      Name: '',\n      Description: '',\n      CategoryId: 0,\n      File: {} as File,\n    };\n  }\n\n  getCategories() {\n    this.categoryService\n      .getAll()\n      .toPromise()\n      .then((res) => (this.listofCategories = res as Category[]));\n  }\n}\n","<form #newsForm=\"ngForm\" autocomplete=\"off\" (ngSubmit)=\"SubmitNews(newsForm)\" >\n  <div class=\"col-md-10 order-md-1\">\n    <img\n      class=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\"\n      *ngIf=\"newsService.imageUrl\"\n      [src]=\"newsService.imageUrl\"\n      alt=\"News image\"\n    />\n  </div>\n  <div class=\"container-form col-md-10\">\n  <input type=\"hidden\" name=\"Id\" [value]=\"newsService.newsData.Id\">\n  <div class=\"form-group mt-3\">\n      <div class=\"input-group\">\n          <input id=\"Name\" name=\"Name\" #Name=\"ngModel\" \n          [(ngModel)]=\"newsService.newsData.Name\" required class=\"form-control\" placeholder=\"Name\">\n      </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"input-group\">\n        <textarea id=\"Description\" name=\"Description\" #Description=\"ngModel\" \n        [(ngModel)]=\"newsService.newsData.Description\" required class=\"form-control\" placeholder=\"Description\"></textarea>\n    </div>\n</div>\n<div class=\"form-group\">\n  <div class=\"input-group\">\n    <select name=\"Categories\" [(ngModel)]=\"selectedValue\" >\n      <option disabled [value]=\"undefined\" selected>Please select category</option>\n      <option *ngFor=\"let item of listofCategories\" [value]=\"item.Id\" [selected]=\"item.Id == newsService.newsData.CategoryId\">{{item.Name}}</option>\n    </select>  \n  </div>\n</div>\n<div class=\"form-group\">\n  <div class=\"input-group\">\n    <input type=\"file\" (change)=\"handleFileInput($event.target.files)\" required id=\"File\" name=\"File\"  />\n  </div>\n</div>\n  <div class=\"form-group\">\n  <button class=\"btn btn-success btn-lg btn-block\" [disabled]=\"newsForm.invalid\" type=\"submit\"><i class=\"fas fa-database\"></i> Submit</button>\n  </div>\n</div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { NewsService } from '../services/news.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { News } from '../models/news';\nimport { PaginatedResult, Pagination } from '../models/Pagination';\nimport { baseUrl } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-news-list',\n  templateUrl: './news-list.component.html',\n  styleUrls: ['./news-list.component.css']\n})\nexport class NewsListComponent implements OnInit {\n  searchQuery = '';\n  pagination: Pagination;\n  listOfNews: News[];\n\n  constructor(public newsService: NewsService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\nthis.pagination = {\ncurrentPage: 1,\nitemsPerPage: 3\n} as Pagination;\n\nthis.loadNews();\n  }\n\n  populateForm(item: News) {\n    this.newsService.getById(item.Id).subscribe((data) => this.newsService.newsData = data);\n    this.newsService.imageUrl = baseUrl + 'download/' + item.Id + '?' + new Date().getTime();\n  }\n  onDelete(Id: number) {\n    if (confirm('Are you sure to delete this record?')) {\n      this.newsService.deleteNews(Id).subscribe(\n        (res) => {\n          this.alertify.warning(\n            'Deleted successfully'\n          );\n          this.newsService.loadNewsByName(this.searchQuery, this.pagination.currentPage, this.pagination.itemsPerPage)\n          .subscribe((res: PaginatedResult<News[]>) => {\n            this.listOfNews = res.result;\n            this.pagination = res.pagination;\n          });\n        },\n        (err) => {\n         this.alertify.error(err);\n        }\n      );\n    } \n\n  }\n  loadNews(){\n    this.newsService.loadNewsByName(this.searchQuery, this.pagination.currentPage, this.pagination.itemsPerPage)\n    .subscribe((res: PaginatedResult<News[]>) => {\n      this.listOfNews = res.result;\n      this.pagination = res.pagination;\n    });\n  }\n  searchNews(){\n    this.newsService.loadNewsByName(this.searchQuery, this.pagination.currentPage, this.pagination.itemsPerPage)\n    .subscribe((res: PaginatedResult<News[]>) => {\n      this.listOfNews = res.result;\n      this.pagination = res.pagination;\n    });\n  }\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadNews();\n  }\n}\n","<div class=\"search-news-form-preview\">\n  <form\n    (ngSubmit)=\"searchNews()\"\n    #searchForm=\"ngForm\"\n    class=\"form-inline my-2 my-lg-0\"\n  >\n    <input\n      class=\"form-control col-md-5 mr-sm-2\"\n      type=\"text\"\n      name=\"searchQuery\"\n      [(ngModel)]=\"searchQuery\"\n      placeholder=\"Search\"\n    />\n    <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">\n      <i class=\"fas fa-search\"></i> Search\n    </button>\n  </form>\n</div>\n\n<table class=\"table table-hover\">\n  <tr *ngFor=\"let item of listOfNews\">\n    <td (click)=\"populateForm(item)\">{{ item.Name }}</td>\n    <td (click)=\"populateForm(item)\">{{ item.Category }}</td>\n    <td (click)=\"populateForm(item)\">{{ item.Description }}</td>\n    <td>\n      <i\n        class=\"far fa-trash-alt fa-lg text-danger\"\n        (click)=\"onDelete(item.Id)\"\n      ></i>\n    </td>\n  </tr>\n</table>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.css']\n})\nexport class NewsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbtron\">\n  <h1 class=\"display-4 text-center\">\n      News Portal\n  </h1>\n  <hr>\n  <div class=\"row\">\n      <div class=\"col-md-5\">\n          <app-news-detail></app-news-detail>\n      </div>\n      <div class=\"col-md-7\">\n          <app-news-list></app-news-list>\n      </div>\n  </div>\n</div>\n\n","import { Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { NewsDetailComponent } from './news-detail/news-detail.component';\nimport { NewsListComponent } from './news-list/news-list.component';\nimport { NewsComponent } from './news/news.component';\nimport { NewPreviewDetailsComponent } from './new-preview-details/new-preview-details.component';\n\nexport const appRoutes: Routes = [\n    {path: '', component: HomeComponent},\n    {\n        path: '',\n        runGuardsAndResolvers: 'always',\n        canActivate: [AuthGuard],\n        children: [\n            {path: 'news-details', component: NewsDetailComponent, canActivate: [AuthGuard]},\n            {path: 'news-list', component: NewsListComponent, canActivate: [AuthGuard]},\n            {path: 'news', component: NewsComponent, canActivate: [AuthGuard]}\n\n\n        ]\n    },\n    {path: 'news-view/:id', component: NewPreviewDetailsComponent},\n    {path: '**', redirectTo: '', pathMatch: 'full'}\n];","import { Injectable } from '@angular/core';\nimport * as alertify from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AlertifyService {\n  constructor() {}\n\n  confirm(message: string, okCallBack: () => any) {\n    alertify.confirm(message, (e: any) => {\n      if (e) {\n        okCallBack();\n      }\n    });\n  }\n  success(message: string) {\n    alertify.success(message);\n  }\n  error(message: string) {\n    alertify.error(message);\n  }\n  warning(message: string) {\n    alertify.warning(message);\n  }\n  message(message: string) {\n    alertify.message(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { baseUrl } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n\n  constructor(private http: HttpClient) {}\n\n  login(model: any) {\n    return this.http.post(baseUrl + 'auth/login', model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('token', user.token);\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\n        }\n      })\n    );\n  }\n  loggedIn(){\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { baseUrl } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\nconstructor(private http: HttpClient) { }\n\ngetAll(){\n  return this.http.get(baseUrl + 'category');\n}\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpErrorResponse,\n  HTTP_INTERCEPTORS,\n} from '@angular/common/http';\nimport {  throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  intercept(\n    req: import('@angular/common/http').HttpRequest<any>,\n    next: import('@angular/common/http').HttpHandler\n  ): import('rxjs').Observable<import('@angular/common/http').HttpEvent<any>> {\n    return next.handle(req).pipe(\n        catchError (error => {\n                if (error.status === 401){\n                    return throwError(error.statusText);\n                }\n\n                if (error instanceof HttpErrorResponse){\n                    const applicationError = error.headers.get('Application-Error');\n                    if(applicationError){\n                        return throwError(applicationError);\n                    }\n                    const serverError = error.error;\n                    let modalStateErrors = '';\n\n                    if (serverError.errors && typeof serverError.errors === 'object'){\n                        for (const key in serverError.errors){\n                            if (serverError.errors[key]){\n                                modalStateErrors += serverError.errors[key] + '\\n';\n                            }\n                        }\n                    }\n                    return throwError(modalStateErrors || serverError || 'Server Error');\n                }\n        })\n    );\n  }\n}\n\nexport const ErrorInterceptorProvider = {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorInterceptor,\n    multi: true\n};","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { News } from '../models/news';\nimport { Observable } from 'rxjs';\nimport { PaginatedResult } from '../models/Pagination';\nimport { map } from 'rxjs/operators';\nimport { baseUrl } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NewsService {\n  newsData: News = {} as News;\n  imageUrl: string;\n\n  constructor(private http: HttpClient) {}\n\n  postNews() {\n    return this.http.post(baseUrl + 'News', this.getFormData());\n  }\n\n  putNews() {\n    return this.http.put(baseUrl + 'News', this.getFormData());\n  }\n\n  deleteNews(id: number) {\n    return this.http.delete(baseUrl + 'News/' + id);\n  }\n\n  loadNewsByName(\n    searchQuery: string,\n    page?,\n    itemsPerPage?\n  ): Observable<PaginatedResult<News[]>> {\n    const paginatedResult: PaginatedResult<News[]> = new PaginatedResult<\n      News[]\n    >();\n\n    let params = new HttpParams();\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n    if (searchQuery != null) {\n      params = params.append('searchQuery', searchQuery);\n    }\n    return this.http\n      .get<News[]>(baseUrl + 'News/GetByName', { observe: 'response', params })\n      .pipe(\n        map((response) => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(\n              response.headers.get('Pagination')\n            );\n            return paginatedResult;\n          }\n        })\n      );\n  }\n\n  getById(id: number): Observable<News> {\n    const news = this.http.get<News>(baseUrl + 'News/GetById?id=' + id);\n    return news;\n  }\n\n  private getFormData(): FormData {\n    const formData: FormData = new FormData();\n\n\n    formData.append('File', this.newsData.File, this.newsData.File.name);\n    formData.append('CategoryId', this.newsData.CategoryId.toString());\n    formData.append('Name', this.newsData.Name);\n    formData.append('Id', this.newsData.Id.toString());\n    formData.append('Description', this.newsData.Description);\n\n    return formData;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\nexport const baseUrl = 'http://localhost:61364/api/';\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}